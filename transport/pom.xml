<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>bollu_utils</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>transport</artifactId>
    <packaging>jar</packaging>
    <name>GooseFS Core - Transport</name>
    <description>Protobuf shared in GooseFS core modules</description>

    <properties>
        <!-- The following paths need to be defined here as well as in the parent pom so that mvn can -->
        <!-- run properly from sub-project directories -->
        <failIfNoTests>false</failIfNoTests>
        <!-- The shading prefix should match the artifact ID, replacing '-' with '.' -->
        <shading.prefix>com.qcloud.cos.goosefs.core.transport</shading.prefix>
        <skip.protoc>false</skip.protoc>

        <log4j.version>2.17.1</log4j.version>
        <jetty.version>9.4.41.v20210516</jetty.version>
        <guava.version>29.0-jre</guava.version>
        <metrics.version>4.1.11</metrics.version>
        <prometheus.version>0.8.0</prometheus.version>
        <commons-lang>3.11</commons-lang>
        <grpc.version>1.28.1</grpc.version>
        <protobuf.version>3.16.1</protobuf.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-core</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>generate</id>
            <properties>
                <skip.protoc>false</skip.protoc>
            </properties>
            <build>
                <plugins>
                    <!-- Cleans the generated java files, prior to regenerating them from the proto/grpc definitions.  -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/java/com/qcloud/cos/goosefs/proto</directory>
                                    <followSymlinks>false</followSymlinks>
                                    <includes>
                                        <include>**/*.java</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>src/main/java/com/qcloud/cos/goosefs/grpc</directory>
                                    <followSymlinks>false</followSymlinks>
                                    <includes>
                                        <include>**/*.java</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>java11</id>
            <activation>
                <jdk>11</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax.annotation</groupId>
                    <artifactId>javax.annotation-api</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                    <skip>${skip.protoc}</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Skip findbugs since there are only generated files in this module. -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Skip checking licenses since there are only generated files in this module. -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Skip checkstyle since there are only generated files in this module. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>